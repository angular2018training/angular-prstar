webpackHotUpdate(1,{

/***/ "./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/tab-schedule.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\r\nvar interview_service_1 = __webpack_require__(\"./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/services/interview.service.ts\");\r\nvar common_1 = __webpack_require__(\"./node_modules/@angular/common/esm5/common.js\");\r\nvar shared_1 = __webpack_require__(\"./src/main/webapp/app/shared/index.ts\");\r\nvar ng_bootstrap_1 = __webpack_require__(\"./node_modules/@ng-bootstrap/ng-bootstrap/index.js\");\r\nvar confirm_modal_component_1 = __webpack_require__(\"./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/confirm-modal/confirm-modal.component.ts\");\r\nvar ProInterviewScheduleTabComponent = /** @class */ (function () {\r\n    function ProInterviewScheduleTabComponent(interviewService, principal, datePipe, modalService) {\r\n        var _this = this;\r\n        this.interviewService = interviewService;\r\n        this.principal = principal;\r\n        this.datePipe = datePipe;\r\n        this.modalService = modalService;\r\n        this.switch = '';\r\n        this.showSelectDate = false;\r\n        this.dataClick = {};\r\n        this.disableList = [];\r\n        this.isSubmit = true;\r\n        this.disableNotice = true;\r\n        this.lineDate = [\r\n            {\r\n                timezone: '',\r\n                fromTime: '',\r\n                toTime: ''\r\n            }\r\n        ];\r\n        this.lineDatas = [];\r\n        this.data = {\r\n            \"id\": '',\r\n            \"type\": '',\r\n            \"interviewSessionScheduleList\": [],\r\n            \"bizNote\": ''\r\n        };\r\n        this.principal.identity().then(function (account) {\r\n            _this.role = account.authorities[1];\r\n        });\r\n    }\r\n    ProInterviewScheduleTabComponent.prototype.checkDateAccept = function (date) {\r\n        if (date) {\r\n            if ((date.proAccepted === true) && (date.bizAccepted === true)) {\r\n                return 'checked';\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkBizAcepted = function (data, key) {\r\n        var _this = this;\r\n        var schedule = data.suggestedInterviewSchedules;\r\n        if (schedule.length > 0) {\r\n            schedule.forEach(function (el, i) {\r\n                if ((el.proAccepted === true) && (el.bizAccepted === true)) {\r\n                    var name_1 = 'group' + key;\r\n                    _this.dataClick = Object.assign({}, _this.dataClick, (_a = {},\r\n                        _a[name_1] = [el.interviewDate, key * i, i],\r\n                        _a));\r\n                    _this.disableNotice = false;\r\n                }\r\n                var _a;\r\n            });\r\n        }\r\n        // console.log('dataClick----', this.dataClick)\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (this.interview) {\r\n            this.idInter = this.interview.id;\r\n            this.sessions = this.interview.interviewSessions;\r\n            console.log('onChanges-----', this.interview);\r\n            this.sessions.forEach(function (item, index) {\r\n                _this.checkBizAcepted(item, index);\r\n                var key = 'disable' + index;\r\n                var line = 'line' + index;\r\n                _this.disableList.push((_a = {},\r\n                    _a[key] = false,\r\n                    _a));\r\n                _this.lineDatas.push((_b = {},\r\n                    _b[line] = [\r\n                        {\r\n                            timezone: '',\r\n                            fromTime: '',\r\n                            toTime: '',\r\n                            zone: ''\r\n                        }\r\n                    ],\r\n                    _b));\r\n                var _a, _b;\r\n            });\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.onClick = function (e, key, i) {\r\n        if (i === void 0) { i = null; }\r\n        var _a = e.target, value = _a.value, name = _a.name, id = _a.id;\r\n        var index = id.replace('radio', '');\r\n        this.dataClick = Object.assign({}, this.dataClick, (_b = {},\r\n            _b[name] = [value, index, i],\r\n            _b));\r\n        if (value.includes('add')) {\r\n            var i_1 = value.replace('add', '');\r\n            this.disableList[i_1][\"disable\" + i_1] = true;\r\n        }\r\n        else {\r\n            this.disableList[key][\"disable\" + key] = false;\r\n        }\r\n        var _b;\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.recievedDate = function (value, key) {\r\n        var id = value.id, data = value.data;\r\n        if (this.lineDatas[key] && data) {\r\n            this.lineDatas[key][\"line\" + key][id].timezone = data;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.ngAfterViewInit = function () {\r\n        this.initTooltip('#tooltip-message');\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.initTooltip = function (id) {\r\n        window.initTooltip(id);\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.recievedTime = function (value, key) {\r\n        var id = value.id, data = value.data, name = value.name;\r\n        if (this.lineDatas[key] && data) {\r\n            this.lineDatas[key][\"line\" + key][id][name] = data;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.onRemoveLine = function (index, key) {\r\n        if (this.lineDatas[key]) {\r\n            this.lineDatas[key][\"line\" + key].splice(index, 1);\r\n        }\r\n        this.lineDate.splice(index, 1);\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.onAddLine = function (key) {\r\n        if (this.lineDatas[key]) {\r\n            this.lineDatas[key][\"line\" + key].push({\r\n                timezone: '',\r\n                fromTime: '',\r\n                toTime: '',\r\n                zone: ''\r\n            });\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkReply = function () {\r\n        var data = this.dataClick;\r\n        // console.log('checkReply---', this.dataClick);\r\n        if (Object.keys(data).length !== 0) {\r\n            for (var key in data) {\r\n                if (data[key][0].includes('add') || data[key][0] === 'request') {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkAccept = function () {\r\n        var data = this.dataClick;\r\n        // console.log('checkAccept---', this.dataClick);\r\n        if (Object.keys(data).length !== 0) {\r\n            for (var key in data) {\r\n                if (!(data[key][0].includes('add') || data[key][0] === 'request')) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkSubmitAddDate = function (date) {\r\n        var _this = this;\r\n        var temp = 0;\r\n        date.forEach(function (item) {\r\n            if ((item.fromTime === \"\") || (item.timezone === \"\") || (item.toTime === \"\") || (item.zone === \"\")) {\r\n                temp = 1;\r\n                _this.isSubmit = false;\r\n                return 0;\r\n            }\r\n        });\r\n        if (temp === 0) {\r\n            this.isSubmit = true;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.parseDuaration = function (fromTime, toTime) {\r\n        var result = 0;\r\n        if (fromTime && toTime) {\r\n            var from = fromTime.split(':');\r\n            var to = toTime.split(':');\r\n            result = (parseInt(to[0]) * 60 + parseInt(to[1])) - (parseInt(from[0]) * 60 + parseInt(from[1]));\r\n            return result;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkRole = function (role, session, name) {\r\n        if (session.bizAccepted && session.proAccepted) {\r\n            return true;\r\n        }\r\n        else {\r\n            if (name === 'biz') {\r\n                if (role === 'ROLE_BIZ') {\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (role === 'ROLE_BIZ') {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.parseData = function (index, valueClick) {\r\n        var sessions = this.sessions;\r\n        if (valueClick[0] === 'request') {\r\n            this.isSubmit = true;\r\n            var data = {};\r\n            var session = sessions[index];\r\n            var suggestedInterviewSchedules = session.suggestedInterviewSchedules;\r\n            data = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: []\r\n            };\r\n            return data;\r\n        }\r\n        else if (valueClick[0].includes('add')) {\r\n            var result = {};\r\n            var suggestedInterviewSchedules = [];\r\n            var session = sessions[index];\r\n            var value = this.lineDatas[index][\"line\" + index];\r\n            this.checkSubmitAddDate(value);\r\n            for (var index_1 in value) {\r\n                var item = value[index_1];\r\n                var data = {};\r\n                if (item && item.fromTime && item.timezone) {\r\n                    data = {\r\n                        \"bizAccepted\": this.role === 'ROLE_BIZ' ? true : false,\r\n                        \"duration\": this.parseDuaration(item.fromTime, item.toTime),\r\n                        \"fromTime\": item.fromTime,\r\n                        \"interviewDate\": new Date(item.timezone),\r\n                        \"interviewSessionId\": session.id,\r\n                        \"timezone\": item.zone,\r\n                        \"proAccepted\": this.role === 'ROLE_BIZ' ? false : true,\r\n                    };\r\n                    suggestedInterviewSchedules.push(data);\r\n                }\r\n            }\r\n            result = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: suggestedInterviewSchedules\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            this.isSubmit = true;\r\n            var result = {};\r\n            var data = {};\r\n            var schedule = [];\r\n            var session = sessions[index];\r\n            var scheduleSugget = session.suggestedInterviewSchedules[valueClick[2]];\r\n            data = {\r\n                \"bizAccepted\": this.checkRole(this.role, scheduleSugget, 'biz'),\r\n                \"duration\": scheduleSugget.duration,\r\n                \"fromTime\": valueClick[0],\r\n                \"id\": scheduleSugget['id'],\r\n                \"interviewDate\": new Date(valueClick[0]),\r\n                \"interviewSessionId\": session.id,\r\n                \"timezone\": \"string\",\r\n                \"proAccepted\": this.checkRole(this.role, scheduleSugget, 'pro'),\r\n            };\r\n            schedule.push(data);\r\n            result = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: schedule\r\n            };\r\n            return result;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.formartData = function (clickDate) {\r\n        var _this = this;\r\n        var keys = Object.keys(clickDate);\r\n        var sessions = this.sessions;\r\n        var dataParse = {};\r\n        var dataRecive = [];\r\n        keys.forEach(function (key, index) {\r\n            var i = key.replace('group', '');\r\n            dataParse = _this.parseData(i, clickDate[key]);\r\n            dataRecive.push(dataParse);\r\n        });\r\n        return dataRecive;\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.onSubmitData = function (type) {\r\n        var _this = this;\r\n        var data = [];\r\n        data = this.formartData(this.dataClick);\r\n        this.data.id = this.idInter;\r\n        this.data.interviewSessionScheduleList = data;\r\n        this.data.type = type;\r\n        this.data.bizNote = this.note;\r\n        if (this.isSubmit) {\r\n            console.log('submit---', this.data);\r\n            this.interviewService.updateSchedule(this.data).subscribe(function (result) {\r\n                if (result) {\r\n                    _this.refresh.emit(true);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.showConfirmDialog = function () {\r\n        var _this = this;\r\n        var modalRef = this.modalService.open(confirm_modal_component_1.ConfirmModalComponent);\r\n        modalRef.result.then(function (result) {\r\n            _this.interviewService.updateSchedule({\r\n                id: _this.idInter,\r\n                type: 0,\r\n                interviewSessionScheduleList: [] // required\r\n            }).subscribe(function (data) {\r\n                console.log('cancel successfully!');\r\n            });\r\n        }, function (reason) {\r\n            console.log('reason confirm cancel: ', reason);\r\n        });\r\n        return modalRef;\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.changeTimezone = function (event, index, key) {\r\n        if (this.lineDatas[key] && event) {\r\n            this.lineDatas[key][\"line\" + key][index].zone = event;\r\n        }\r\n        console.log('changeTimezone', this.lineDatas);\r\n        // console.log('lineData', this.lineDatas)\r\n        // console.log('event: ', event);\r\n        // console.log('index: ', index);\r\n    };\r\n    __decorate([\r\n        core_1.Input('interview'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ProInterviewScheduleTabComponent.prototype, \"interview\", void 0);\r\n    __decorate([\r\n        core_1.Output('refreshData'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ProInterviewScheduleTabComponent.prototype, \"refresh\", void 0);\r\n    ProInterviewScheduleTabComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'pro-interview-schedule-tab',\r\n            template: __webpack_require__(\"./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/tab-schedule.component.html\"),\r\n            styles: [__webpack_require__(\"./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/tab-schedule.component.css\")]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [interview_service_1.InterviewService,\r\n            shared_1.Principal,\r\n            common_1.DatePipe,\r\n            ng_bootstrap_1.NgbModal])\r\n    ], ProInterviewScheduleTabComponent);\r\n    return ProInterviewScheduleTabComponent;\r\n}());\r\nexports.ProInterviewScheduleTabComponent = ProInterviewScheduleTabComponent;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJhcHAvYXBwL3NjcmVlbnMvaW50ZXJ2aWV3L3Byby1pbnRlcnZpZXctc2NoZWR1bGUtdGFiL3RhYi1zY2hlZHVsZS5jb21wb25lbnQudHM/ZWQzNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUNBLDhFQUFpRTtBQUNqRSxrSkFBZ0U7QUFDaEUsb0ZBQTJDO0FBQzNDLDRFQUE0QztBQUU1QywrRkFBbUU7QUFFbkUsbUtBQWdGO0FBT2hGO0lBb0NFLDBDQUNTLGdCQUFrQyxFQUNqQyxTQUFvQixFQUNwQixRQUFrQixFQUNsQixZQUFzQjtRQUpoQyxpQkFTQztRQVJRLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDakMsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUNwQixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLGlCQUFZLEdBQVosWUFBWSxDQUFVO1FBcENoQyxXQUFNLEdBQUcsRUFBRSxDQUFDO1FBRVosbUJBQWMsR0FBWSxLQUFLLENBQUM7UUFDaEMsY0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNmLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxJQUFJLENBQUM7UUFDaEIsa0JBQWEsR0FBRyxJQUFJLENBQUM7UUFTckIsYUFBUSxHQUFHO1lBQ1Q7Z0JBQ0UsUUFBUSxFQUFFLEVBQUU7Z0JBQ1osUUFBUSxFQUFFLEVBQUU7Z0JBQ1osTUFBTSxFQUFFLEVBQUU7YUFDWDtTQUNGO1FBRUQsY0FBUyxHQUFHLEVBQUU7UUFFZCxTQUFJLEdBQUc7WUFDTCxJQUFJLEVBQUUsRUFBRTtZQUNSLE1BQU0sRUFBRSxFQUFFO1lBQ1YsOEJBQThCLEVBQUUsRUFBRTtZQUNsQyxTQUFTLEVBQUUsRUFBRTtTQUNkO1FBUUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBQyxPQUFPO1lBQ3JDLEtBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFD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QyxjQUFJO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQztZQUN0QyxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsRUFBRSxVQUFDLE1BQU07WUFDUixPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2pELENBQUMsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxDQUFDLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBQ0QseURBQWMsR0FBZCxVQUFlLEtBQUssRUFBRSxLQUFLLEVBQUUsR0FBRztRQUM5QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDakMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxTQUFPLEdBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7UUFDeEQsQ0FBQztRQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUM3QywwQ0FBMEM7UUFDMUMsaUNBQWlDO1FBQ2pDLGlDQUFpQztJQUNuQyxDQUFDO0lBN1ZtQjtRQUFuQixZQUFLLENBQUMsV0FBVyxDQUFDOzt1RUFBdUI7SUFDbkI7UUFBdEIsYUFBTSxDQUFDLGFBQWEsQ0FBQzs7cUVBQXFCO0lBSGhDLGdDQUFnQztRQUw1QyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDRCQUE0QjtZQUN0Qyw2QkFBYSxpR0FBK0I7WUFDNUMsU0FBUyxtQkFBRyxnR0FBK0I7U0FDNUMsQ0FBQzt5Q0FzQzJCLG9DQUFnQjtZQUN0QixrQkFBUztZQUNWLGlCQUFRO1lBQ0osdUJBQVE7T0F4Q3JCLGdDQUFnQyxDQWlXNUM7SUFBRCx1Q0FBQztDQUFBO0FBaldZLDRFQUFnQyIsImZpbGUiOiIuL3NyYy9tYWluL3dlYmFwcC9hcHAvc2NyZWVucy9pbnRlcnZpZXcvcHJvLWludGVydmlldy1zY2hlZHVsZS10YWIvdGFiLXNjaGVkdWxlLmNvbXBvbmVudC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEludGVydmlld1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2ludGVydmlldy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRGF0ZVBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBQcmluY2lwYWwgfSBmcm9tICcuLi8uLi8uLi9zaGFyZWQnO1xyXG5pbXBvcnQgeyBKaGlBbGVydFNlcnZpY2UgfSBmcm9tICduZy1qaGlwc3Rlcic7XHJcbmltcG9ydCB7IE5nYk1vZGFsLCBOZ2JNb2RhbFJlZiB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgSHR0cEVycm9yUmVzcG9uc2UsIEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgQ29uZmlybU1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9jb25maXJtLW1vZGFsL2NvbmZpcm0tbW9kYWwuY29tcG9uZW50JztcclxuZGVjbGFyZSB2YXIgd2luZG93OiBhbnk7XHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncHJvLWludGVydmlldy1zY2hlZHVsZS10YWInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi90YWItc2NoZWR1bGUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3RhYi1zY2hlZHVsZS5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFByb0ludGVydmlld1NjaGVkdWxlVGFiQ29tcG9uZW50IHtcclxuICAvLyBASW5wdXQoJ3Nlc3Npb24nKSBwdWJsaWMgc2Vzc2lvbjogYW55O1xyXG4gIEBJbnB1dCgnaW50ZXJ2aWV3JykgcHVibGljIGludGVydmlldzogYW55O1xyXG4gIEBPdXRwdXQoJ3JlZnJlc2hEYXRhJykgcHVibGljIHJlZnJlc2g6IGFueTtcclxuICBzd2l0Y2ggPSAnJztcclxuICBzZXNzaW9uczogYW55W107XHJcbiAgc2hvd1NlbGVjdERhdGU6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBkYXRhQ2xpY2sgPSB7fTtcclxuICBkaXNhYmxlTGlzdCA9IFtdO1xyXG4gIGlzU3VibWl0ID0gdHJ1ZTtcclxuICBkaXNhYmxlTm90aWNlID0gdHJ1ZTtcclxuXHJcbiAgZGF0ZUF2YWlsYWJpbGl0eTogYW55O1xyXG4gIGlkSW50ZXI6IGFueTtcclxuICBpZDogYW55O1xyXG4gIHJvbGU6IGFueTtcclxuICBub3RlOiBhbnk7XHJcbiAgbm90ZVN0YXRpYzogc3RyaW5nO1xyXG5cclxuICBsaW5lRGF0ZSA9IFtcclxuICAgIHtcclxuICAgICAgdGltZXpvbmU6ICcnLFxyXG4gICAgICBmcm9tVGltZTogJycsXHJcbiAgICAgIHRvVGltZTogJydcclxuICAgIH1cclxuICBdXHJcblxyXG4gIGxpbmVEYXRhcyA9IFtdXHJcblxyXG4gIGRhdGEgPSB7XHJcbiAgICBcImlkXCI6ICcnLFxyXG4gICAgXCJ0eXBlXCI6ICcnLFxyXG4gICAgXCJpbnRlcnZpZXdTZXNzaW9uU2NoZWR1bGVMaXN0XCI6IFtdLFxyXG4gICAgXCJiaXpOb3RlXCI6ICcnXHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHB1YmxpYyBpbnRlcnZpZXdTZXJ2aWNlOiBJbnRlcnZpZXdTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSBwcmluY2lwYWw6IFByaW5jaXBhbCxcclxuICAgIHByaXZhdGUgZGF0ZVBpcGU6IERhdGVQaXBlLFxyXG4gICAgcHJpdmF0ZSBtb2RhbFNlcnZpY2U6IE5nYk1vZGFsXHJcbiAgKSB7XHJcbiAgICB0aGlzLnByaW5jaXBhbC5pZGVudGl0eSgpLnRoZW4oKGFjY291bnQpID0+IHtcclxuICAgICAgdGhpcy5yb2xlID0gYWNjb3VudC5hdXRob3JpdGllc1sxXVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjaGVja0RhdGVBY2NlcHQoZGF0ZSkge1xyXG4gICAgaWYgKGRhdGUpIHtcclxuICAgICAgaWYgKChkYXRlLnByb0FjY2VwdGVkID09PSB0cnVlKSAmJiAoZGF0ZS5iaXpBY2NlcHRlZCA9PT0gdHJ1ZSkpIHtcclxuICAgICAgICByZXR1cm4gJ2NoZWNrZWQnO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgICAgfVxyXG5cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNoZWNrQml6QWNlcHRlZChkYXRhLCBrZXkpIHtcclxuICAgIGxldCBzY2hlZHVsZSA9IGRhdGEuc3VnZ2VzdGVkSW50ZXJ2aWV3U2NoZWR1bGVzO1xyXG4gICAgaWYgKHNjaGVkdWxlLmxlbmd0aCA+IDApIHtcclxuICAgICAgc2NoZWR1bGUuZm9yRWFjaCgoZWwsIGkpID0+IHtcclxuICAgICAgICBpZiAoKGVsLnByb0FjY2VwdGVkID09PSB0cnVlKSAmJiAoZWwuYml6QWNjZXB0ZWQgPT09IHRydWUpKSB7XHJcbiAgICAgICAgICBsZXQgbmFtZSA9ICdncm91cCcgKyBrZXk7XHJcbiAgICAgICAgICB0aGlzLmRhdGFDbGljayA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGF0YUNsaWNrLCB7XHJcbiAgICAgICAgICAgIFtuYW1lXTogW2VsLmludGVydmlld0RhdGUsIGtleSAqIGksIGldXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHRoaXMuZGlzYWJsZU5vdGljZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvLyBjb25zb2xlLmxvZygnZGF0YUNsaWNrLS0tLScsIHRoaXMuZGF0YUNsaWNrKVxyXG5cclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IGFueSk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuaW50ZXJ2aWV3KSB7XHJcbiAgICAgIHRoaXMuaWRJbnRlciA9IHRoaXMuaW50ZXJ2aWV3LmlkO1xyXG4gICAgICB0aGlzLnNlc3Npb25zID0gdGhpcy5pbnRlcnZpZXcuaW50ZXJ2aWV3U2Vzc2lvbnM7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdvbkNoYW5nZXMtLS0tLScsIHRoaXMuaW50ZXJ2aWV3KVxyXG4gICAgICB0aGlzLnNlc3Npb25zLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XHJcbiAgICAgICAgdGhpcy5jaGVja0JpekFjZXB0ZWQoaXRlbSwgaW5kZXgpXHJcbiAgICAgICAgbGV0IGtleSA9ICdkaXNhYmxlJyArIGluZGV4O1xyXG4gICAgICAgIGxldCBsaW5lID0gJ2xpbmUnICsgaW5kZXg7XHJcbiAgICAgICAgdGhpcy5kaXNhYmxlTGlzdC5wdXNoKHtcclxuICAgICAgICAgIFtrZXldOiBmYWxzZVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5saW5lRGF0YXMucHVzaCh7XHJcbiAgICAgICAgICBbbGluZV06IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHRpbWV6b25lOiAnJyxcclxuICAgICAgICAgICAgICBmcm9tVGltZTogJycsXHJcbiAgICAgICAgICAgICAgdG9UaW1lOiAnJyxcclxuICAgICAgICAgICAgICB6b25lOiAnJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBdXHJcbiAgICAgICAgfSlcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uQ2xpY2soZSwga2V5LCBpID0gbnVsbCkge1xyXG4gICAgbGV0IHsgdmFsdWUsIG5hbWUsIGlkIH0gPSBlLnRhcmdldDtcclxuICAgIGxldCBpbmRleCA9IGlkLnJlcGxhY2UoJ3JhZGlvJywgJycpO1xyXG5cclxuICAgIHRoaXMuZGF0YUNsaWNrID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kYXRhQ2xpY2ssIHtcclxuICAgICAgW25hbWVdOiBbdmFsdWUsIGluZGV4LCBpXVxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKHZhbHVlLmluY2x1ZGVzKCdhZGQnKSkge1xyXG4gICAgICBsZXQgaSA9IHZhbHVlLnJlcGxhY2UoJ2FkZCcsICcnKVxyXG4gICAgICB0aGlzLmRpc2FibGVMaXN0W2ldW2BkaXNhYmxlJHtpfWBdID0gdHJ1ZVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5kaXNhYmxlTGlzdFtrZXldW2BkaXNhYmxlJHtrZXl9YF0gPSBmYWxzZVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVjaWV2ZWREYXRlKHZhbHVlLCBrZXkpIHtcclxuICAgIGxldCB7IGlkLCBkYXRhIH0gPSB2YWx1ZTtcclxuICAgIGlmICh0aGlzLmxpbmVEYXRhc1trZXldICYmIGRhdGEpIHtcclxuICAgICAgdGhpcy5saW5lRGF0YXNba2V5XVtgbGluZSR7a2V5fWBdW2lkXS50aW1lem9uZSA9IGRhdGE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICB0aGlzLmluaXRUb29sdGlwKCcjdG9vbHRpcC1tZXNzYWdlJyk7XHJcbiAgfVxyXG5cclxuICBpbml0VG9vbHRpcChpZCkge1xyXG4gICAgd2luZG93LmluaXRUb29sdGlwKGlkKTtcclxuICB9XHJcblxyXG4gIHJlY2lldmVkVGltZSh2YWx1ZSwga2V5KSB7XHJcbiAgICBsZXQgeyBpZCwgZGF0YSwgbmFtZSB9ID0gdmFsdWU7XHJcbiAgICBpZiAodGhpcy5saW5lRGF0YXNba2V5XSAmJiBkYXRhKSB7XHJcbiAgICAgIHRoaXMubGluZURhdGFzW2tleV1bYGxpbmUke2tleX1gXVtpZF1bbmFtZV0gPSBkYXRhO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgb25SZW1vdmVMaW5lKGluZGV4LCBrZXkpIHtcclxuICAgIGlmICh0aGlzLmxpbmVEYXRhc1trZXldKSB7XHJcbiAgICAgIHRoaXMubGluZURhdGFzW2tleV1bYGxpbmUke2tleX1gXS5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5saW5lRGF0ZS5zcGxpY2UoaW5kZXgsIDEpXHJcbiAgfVxyXG5cclxuICBvbkFkZExpbmUoa2V5KSB7XHJcbiAgICBpZiAodGhpcy5saW5lRGF0YXNba2V5XSkge1xyXG4gICAgICB0aGlzLmxpbmVEYXRhc1trZXldW2BsaW5lJHtrZXl9YF0ucHVzaCh7XHJcbiAgICAgICAgdGltZXpvbmU6ICcnLFxyXG4gICAgICAgIGZyb21UaW1lOiAnJyxcclxuICAgICAgICB0b1RpbWU6ICcnLFxyXG4gICAgICAgIHpvbmU6ICcnXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjaGVja1JlcGx5KCkge1xyXG4gICAgbGV0IGRhdGEgPSB0aGlzLmRhdGFDbGljaztcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjaGVja1JlcGx5LS0tJywgdGhpcy5kYXRhQ2xpY2spO1xyXG4gICAgaWYgKE9iamVjdC5rZXlzKGRhdGEpLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICBmb3IgKGxldCBrZXkgaW4gZGF0YSkge1xyXG4gICAgICAgIGlmIChkYXRhW2tleV1bMF0uaW5jbHVkZXMoJ2FkZCcpIHx8IGRhdGFba2V5XVswXSA9PT0gJ3JlcXVlc3QnKSB7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRydWVcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNoZWNrQWNjZXB0KCkge1xyXG4gICAgbGV0IGRhdGEgPSB0aGlzLmRhdGFDbGljaztcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjaGVja0FjY2VwdC0tLScsIHRoaXMuZGF0YUNsaWNrKTtcclxuXHJcbiAgICBpZiAoT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7XHJcbiAgICAgICAgaWYgKCEoZGF0YVtrZXldWzBdLmluY2x1ZGVzKCdhZGQnKSB8fCBkYXRhW2tleV1bMF0gPT09ICdyZXF1ZXN0JykpIHtcclxuICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNoZWNrU3VibWl0QWRkRGF0ZShkYXRlKSB7XHJcbiAgICBsZXQgdGVtcCA9IDA7XHJcbiAgICBkYXRlLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgIGlmICgoaXRlbS5mcm9tVGltZSA9PT0gXCJcIikgfHwgKGl0ZW0udGltZXpvbmUgPT09IFwiXCIpIHx8IChpdGVtLnRvVGltZSA9PT0gXCJcIikgfHwgKGl0ZW0uem9uZSA9PT0gXCJcIikpIHtcclxuICAgICAgICB0ZW1wID0gMTtcclxuICAgICAgICB0aGlzLmlzU3VibWl0ID0gZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgaWYgKHRlbXAgPT09IDApIHtcclxuICAgICAgdGhpcy5pc1N1Ym1pdCA9IHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwYXJzZUR1YXJhdGlvbihmcm9tVGltZSwgdG9UaW1lKSB7XHJcbiAgICBsZXQgcmVzdWx0ID0gMDtcclxuICAgIGlmIChmcm9tVGltZSAmJiB0b1RpbWUpIHtcclxuICAgICAgbGV0IGZyb20gPSBmcm9tVGltZS5zcGxpdCgnOicpO1xyXG4gICAgICBsZXQgdG8gPSB0b1RpbWUuc3BsaXQoJzonKTtcclxuICAgICAgcmVzdWx0ID0gKHBhcnNlSW50KHRvWzBdKSAqIDYwICsgcGFyc2VJbnQodG9bMV0pKSAtIChwYXJzZUludChmcm9tWzBdKSAqIDYwICsgcGFyc2VJbnQoZnJvbVsxXSkpXHJcbiAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjaGVja1JvbGUocm9sZSwgc2Vzc2lvbiwgbmFtZSkge1xyXG4gICAgaWYgKHNlc3Npb24uYml6QWNjZXB0ZWQgJiYgc2Vzc2lvbi5wcm9BY2NlcHRlZCkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChuYW1lID09PSAnYml6Jykge1xyXG4gICAgICAgIGlmIChyb2xlID09PSAnUk9MRV9CSVonKSB7XHJcbiAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKHJvbGUgPT09ICdST0xFX0JJWicpIHtcclxuICAgICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcGFyc2VEYXRhKGluZGV4LCB2YWx1ZUNsaWNrKSB7XHJcbiAgICBsZXQgc2Vzc2lvbnMgPSB0aGlzLnNlc3Npb25zO1xyXG4gICAgaWYgKHZhbHVlQ2xpY2tbMF0gPT09ICdyZXF1ZXN0Jykge1xyXG4gICAgICB0aGlzLmlzU3VibWl0ID0gdHJ1ZTtcclxuICAgICAgbGV0IGRhdGE6IGFueSA9IHt9O1xyXG4gICAgICBsZXQgc2Vzc2lvbiA9IHNlc3Npb25zW2luZGV4XTtcclxuICAgICAgbGV0IHsgc3VnZ2VzdGVkSW50ZXJ2aWV3U2NoZWR1bGVzIH0gPSBzZXNzaW9uO1xyXG4gICAgICBkYXRhID0ge1xyXG4gICAgICAgIGlkOiBzZXNzaW9uLmlkLFxyXG4gICAgICAgIHN1Z2dlc3RlZEludGVydmlld1NjaGVkdWxlczogW11cclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZGF0YVxyXG4gICAgfSBlbHNlIGlmICh2YWx1ZUNsaWNrWzBdLmluY2x1ZGVzKCdhZGQnKSkge1xyXG4gICAgICBsZXQgcmVzdWx0ID0ge307XHJcbiAgICAgIGxldCBzdWdnZXN0ZWRJbnRlcnZpZXdTY2hlZHVsZXMgPSBbXTtcclxuICAgICAgbGV0IHNlc3Npb24gPSBzZXNzaW9uc1tpbmRleF07XHJcbiAgICAgIGxldCB2YWx1ZSA9IHRoaXMubGluZURhdGFzW2luZGV4XVtgbGluZSR7aW5kZXh9YF07XHJcbiAgICAgIHRoaXMuY2hlY2tTdWJtaXRBZGREYXRlKHZhbHVlKTtcclxuICAgICAgZm9yIChsZXQgaW5kZXggaW4gdmFsdWUpIHtcclxuICAgICAgICBsZXQgaXRlbSA9IHZhbHVlW2luZGV4XTtcclxuICAgICAgICBsZXQgZGF0YSA9IHt9O1xyXG4gICAgICAgIGlmIChpdGVtICYmIGl0ZW0uZnJvbVRpbWUgJiYgaXRlbS50aW1lem9uZSkge1xyXG4gICAgICAgICAgZGF0YSA9IHtcclxuICAgICAgICAgICAgXCJiaXpBY2NlcHRlZFwiOiB0aGlzLnJvbGUgPT09ICdST0xFX0JJWicgPyB0cnVlIDogZmFsc2UsXHJcbiAgICAgICAgICAgIFwiZHVyYXRpb25cIjogdGhpcy5wYXJzZUR1YXJhdGlvbihpdGVtLmZyb21UaW1lLCBpdGVtLnRvVGltZSksXHJcbiAgICAgICAgICAgIFwiZnJvbVRpbWVcIjogaXRlbS5mcm9tVGltZSxcclxuICAgICAgICAgICAgXCJpbnRlcnZpZXdEYXRlXCI6IG5ldyBEYXRlKGl0ZW0udGltZXpvbmUpLFxyXG4gICAgICAgICAgICBcImludGVydmlld1Nlc3Npb25JZFwiOiBzZXNzaW9uLmlkLFxyXG4gICAgICAgICAgICBcInRpbWV6b25lXCI6IGl0ZW0uem9uZSxcclxuICAgICAgICAgICAgXCJwcm9BY2NlcHRlZFwiOiB0aGlzLnJvbGUgPT09ICdST0xFX0JJWicgPyBmYWxzZSA6IHRydWUsXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBzdWdnZXN0ZWRJbnRlcnZpZXdTY2hlZHVsZXMucHVzaChkYXRhKVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICByZXN1bHQgPSB7XHJcbiAgICAgICAgaWQ6IHNlc3Npb24uaWQsXHJcbiAgICAgICAgc3VnZ2VzdGVkSW50ZXJ2aWV3U2NoZWR1bGVzOiBzdWdnZXN0ZWRJbnRlcnZpZXdTY2hlZHVsZXNcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5pc1N1Ym1pdCA9IHRydWU7XHJcbiAgICAgIGxldCByZXN1bHQgPSB7fTtcclxuICAgICAgbGV0IGRhdGEgPSB7fTtcclxuICAgICAgbGV0IHNjaGVkdWxlID0gW107XHJcbiAgICAgIGxldCBzZXNzaW9uID0gc2Vzc2lvbnNbaW5kZXhdO1xyXG4gICAgICBsZXQgc2NoZWR1bGVTdWdnZXQgPSBzZXNzaW9uLnN1Z2dlc3RlZEludGVydmlld1NjaGVkdWxlc1t2YWx1ZUNsaWNrWzJdXTtcclxuICAgICAgZGF0YSA9IHtcclxuICAgICAgICBcImJpekFjY2VwdGVkXCI6IHRoaXMuY2hlY2tSb2xlKHRoaXMucm9sZSwgc2NoZWR1bGVTdWdnZXQsICdiaXonKSxcclxuICAgICAgICBcImR1cmF0aW9uXCI6IHNjaGVkdWxlU3VnZ2V0LmR1cmF0aW9uLFxyXG4gICAgICAgIFwiZnJvbVRpbWVcIjogdmFsdWVDbGlja1swXSxcclxuICAgICAgICBcImlkXCI6IHNjaGVkdWxlU3VnZ2V0WydpZCddLFxyXG4gICAgICAgIFwiaW50ZXJ2aWV3RGF0ZVwiOiBuZXcgRGF0ZSh2YWx1ZUNsaWNrWzBdKSxcclxuICAgICAgICBcImludGVydmlld1Nlc3Npb25JZFwiOiBzZXNzaW9uLmlkLFxyXG4gICAgICAgIFwidGltZXpvbmVcIjogXCJzdHJpbmdcIixcclxuICAgICAgICBcInByb0FjY2VwdGVkXCI6IHRoaXMuY2hlY2tSb2xlKHRoaXMucm9sZSwgc2NoZWR1bGVTdWdnZXQsICdwcm8nKSxcclxuICAgICAgfVxyXG4gICAgICBzY2hlZHVsZS5wdXNoKGRhdGEpXHJcbiAgICAgIHJlc3VsdCA9IHtcclxuICAgICAgICBpZDogc2Vzc2lvbi5pZCxcclxuICAgICAgICBzdWdnZXN0ZWRJbnRlcnZpZXdTY2hlZHVsZXM6IHNjaGVkdWxlXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZvcm1hcnREYXRhKGNsaWNrRGF0ZSkge1xyXG4gICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhjbGlja0RhdGUpO1xyXG4gICAgbGV0IHNlc3Npb25zID0gdGhpcy5zZXNzaW9ucztcclxuICAgIGxldCBkYXRhUGFyc2UgPSB7fTtcclxuICAgIGxldCBkYXRhUmVjaXZlID0gW107XHJcbiAgICBrZXlzLmZvckVhY2goKGtleSwgaW5kZXgpID0+IHtcclxuICAgICAgbGV0IGkgPSBrZXkucmVwbGFjZSgnZ3JvdXAnLCAnJylcclxuICAgICAgZGF0YVBhcnNlID0gdGhpcy5wYXJzZURhdGEoaSwgY2xpY2tEYXRlW2tleV0pXHJcbiAgICAgIGRhdGFSZWNpdmUucHVzaChkYXRhUGFyc2UpXHJcbiAgICB9KVxyXG4gICAgcmV0dXJuIGRhdGFSZWNpdmU7XHJcbiAgfVxyXG4gIG9uU3VibWl0RGF0YSh0eXBlKSB7XHJcbiAgICBsZXQgZGF0YSA9IFtdO1xyXG4gICAgZGF0YSA9IHRoaXMuZm9ybWFydERhdGEodGhpcy5kYXRhQ2xpY2spO1xyXG4gICAgdGhpcy5kYXRhLmlkID0gdGhpcy5pZEludGVyO1xyXG4gICAgdGhpcy5kYXRhLmludGVydmlld1Nlc3Npb25TY2hlZHVsZUxpc3QgPSBkYXRhO1xyXG4gICAgdGhpcy5kYXRhLnR5cGUgPSB0eXBlO1xyXG4gICAgdGhpcy5kYXRhLmJpek5vdGUgPSB0aGlzLm5vdGU7XHJcbiAgICBpZiAodGhpcy5pc1N1Ym1pdCkge1xyXG4gICAgICBjb25zb2xlLmxvZygnc3VibWl0LS0tJywgdGhpcy5kYXRhKVxyXG4gICAgICB0aGlzLmludGVydmlld1NlcnZpY2UudXBkYXRlU2NoZWR1bGUodGhpcy5kYXRhKS5zdWJzY3JpYmUocmVzdWx0ID0+IHtcclxuICAgICAgICBpZiAocmVzdWx0KSB7XHJcbiAgICAgICAgICB0aGlzLnJlZnJlc2guZW1pdCh0cnVlKVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzaG93Q29uZmlybURpYWxvZygpOiBOZ2JNb2RhbFJlZiB7XHJcbiAgICBjb25zdCBtb2RhbFJlZiA9IHRoaXMubW9kYWxTZXJ2aWNlLm9wZW4oQ29uZmlybU1vZGFsQ29tcG9uZW50KTtcclxuICAgIG1vZGFsUmVmLnJlc3VsdC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgICAgdGhpcy5pbnRlcnZpZXdTZXJ2aWNlLnVwZGF0ZVNjaGVkdWxlKHtcclxuICAgICAgICBpZDogdGhpcy5pZEludGVyLFxyXG4gICAgICAgIHR5cGU6IDAsXHJcbiAgICAgICAgaW50ZXJ2aWV3U2Vzc2lvblNjaGVkdWxlTGlzdDogW10gLy8gcmVxdWlyZWRcclxuICAgICAgfSkuc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdjYW5jZWwgc3VjY2Vzc2Z1bGx5IScpO1xyXG4gICAgICB9KTtcclxuICAgIH0sIChyZWFzb24pID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ3JlYXNvbiBjb25maXJtIGNhbmNlbDogJywgcmVhc29uKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIG1vZGFsUmVmO1xyXG4gIH1cclxuICBjaGFuZ2VUaW1lem9uZShldmVudCwgaW5kZXgsIGtleSkge1xyXG4gICAgaWYgKHRoaXMubGluZURhdGFzW2tleV0gJiYgZXZlbnQpIHtcclxuICAgICAgdGhpcy5saW5lRGF0YXNba2V5XVtgbGluZSR7a2V5fWBdW2luZGV4XS56b25lID0gZXZlbnQ7XHJcbiAgICB9XHJcbiAgICBjb25zb2xlLmxvZygnY2hhbmdlVGltZXpvbmUnLCB0aGlzLmxpbmVEYXRhcylcclxuICAgIC8vIGNvbnNvbGUubG9nKCdsaW5lRGF0YScsIHRoaXMubGluZURhdGFzKVxyXG4gICAgLy8gY29uc29sZS5sb2coJ2V2ZW50OiAnLCBldmVudCk7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnaW5kZXg6ICcsIGluZGV4KTtcclxuICB9XHJcblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL25vZGVfbW9kdWxlcy90c2xpbnQtbG9hZGVyIS4vc3JjL21haW4vd2ViYXBwL2FwcC9zY3JlZW5zL2ludGVydmlldy9wcm8taW50ZXJ2aWV3LXNjaGVkdWxlLXRhYi90YWItc2NoZWR1bGUuY29tcG9uZW50LnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/tab-schedule.component.ts\n");

/***/ })

})