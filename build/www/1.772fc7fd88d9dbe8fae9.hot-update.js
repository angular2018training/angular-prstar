webpackHotUpdate(1,{

/***/ "./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/tab-schedule.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\r\nvar interview_service_1 = __webpack_require__(\"./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/services/interview.service.ts\");\r\nvar common_1 = __webpack_require__(\"./node_modules/@angular/common/esm5/common.js\");\r\nvar shared_1 = __webpack_require__(\"./src/main/webapp/app/shared/index.ts\");\r\nvar ng_bootstrap_1 = __webpack_require__(\"./node_modules/@ng-bootstrap/ng-bootstrap/index.js\");\r\nvar confirm_modal_component_1 = __webpack_require__(\"./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/confirm-modal/confirm-modal.component.ts\");\r\nvar ProInterviewScheduleTabComponent = /** @class */ (function () {\r\n    function ProInterviewScheduleTabComponent(interviewService, principal, datePipe, modalService) {\r\n        var _this = this;\r\n        this.interviewService = interviewService;\r\n        this.principal = principal;\r\n        this.datePipe = datePipe;\r\n        this.modalService = modalService;\r\n        this.refreshData = new core_1.EventEmitter();\r\n        this.switch = '';\r\n        this.showSelectDate = false;\r\n        this.dataClick = {};\r\n        this.disableList = [];\r\n        this.isSubmit = true;\r\n        this.disableNotice = true;\r\n        this.lineDate = [\r\n            {\r\n                timezone: '',\r\n                fromTime: '',\r\n                toTime: ''\r\n            }\r\n        ];\r\n        this.lineDatas = [];\r\n        this.data = {\r\n            \"id\": '',\r\n            \"type\": '',\r\n            \"interviewSessionScheduleList\": [],\r\n            \"bizNote\": ''\r\n        };\r\n        this.principal.identity().then(function (account) {\r\n            _this.role = account.authorities[1];\r\n        });\r\n    }\r\n    ProInterviewScheduleTabComponent.prototype.checkDateAccept = function (date) {\r\n        if (date) {\r\n            if ((date.proAccepted === true) && (date.bizAccepted === true)) {\r\n                return 'checked';\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkBizAcepted = function (data, key) {\r\n        var _this = this;\r\n        var schedule = data.suggestedInterviewSchedules;\r\n        if (schedule.length > 0) {\r\n            schedule.forEach(function (el, i) {\r\n                if ((el.proAccepted === true) && (el.bizAccepted === true)) {\r\n                    var name_1 = 'group' + key;\r\n                    _this.dataClick = Object.assign({}, _this.dataClick, (_a = {},\r\n                        _a[name_1] = [el.interviewDate, key * i, i],\r\n                        _a));\r\n                    _this.disableNotice = false;\r\n                }\r\n                var _a;\r\n            });\r\n        }\r\n        // console.log('dataClick----', this.dataClick)\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (this.interview) {\r\n            this.idInter = this.interview.id;\r\n            this.sessions = this.interview.interviewSessions;\r\n            console.log('onChanges-----', this.interview);\r\n            this.lineDatas = [];\r\n            this.dataClick = {};\r\n            this.notePro = '';\r\n            this.sessions.forEach(function (item, index) {\r\n                _this.checkBizAcepted(item, index);\r\n                var key = 'disable' + index;\r\n                var line = 'line' + index;\r\n                _this.disableList.push((_a = {},\r\n                    _a[key] = false,\r\n                    _a));\r\n                _this.lineDatas.push((_b = {},\r\n                    _b[line] = [\r\n                        {\r\n                            timezone: '',\r\n                            fromTime: '',\r\n                            toTime: '',\r\n                            zone: ''\r\n                        }\r\n                    ],\r\n                    _b));\r\n                var _a, _b;\r\n            });\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.onClick = function (e, key, i) {\r\n        if (i === void 0) { i = null; }\r\n        var _a = e.target, value = _a.value, name = _a.name, id = _a.id;\r\n        var index = id.replace('radio', '');\r\n        this.dataClick = Object.assign({}, this.dataClick, (_b = {},\r\n            _b[name] = [value, index, i],\r\n            _b));\r\n        if (value.includes('add')) {\r\n            var i_1 = value.replace('add', '');\r\n            this.disableList[i_1][\"disable\" + i_1] = true;\r\n        }\r\n        else {\r\n            this.disableList[key][\"disable\" + key] = false;\r\n        }\r\n        var _b;\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.recievedDate = function (value, key) {\r\n        var id = value.id, data = value.data;\r\n        if (this.lineDatas[key] && data) {\r\n            this.lineDatas[key][\"line\" + key][id].timezone = data;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.ngAfterViewInit = function () {\r\n        this.initTooltip('#tooltip-message');\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.initTooltip = function (id) {\r\n        window.initTooltip(id);\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.recievedTime = function (value, key) {\r\n        var id = value.id, data = value.data, name = value.name;\r\n        if (this.lineDatas[key] && data) {\r\n            this.lineDatas[key][\"line\" + key][id][name] = data;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.onRemoveLine = function (index, key) {\r\n        if (this.lineDatas[key]) {\r\n            this.lineDatas[key][\"line\" + key].splice(index, 1);\r\n        }\r\n        this.lineDate.splice(index, 1);\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.onAddLine = function (key) {\r\n        if (this.lineDatas[key]) {\r\n            this.lineDatas[key][\"line\" + key].push({\r\n                timezone: '',\r\n                fromTime: '',\r\n                toTime: '',\r\n                zone: ''\r\n            });\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkReply = function () {\r\n        var data = this.dataClick;\r\n        // console.log('checkReply---', this.dataClick);\r\n        if (Object.keys(data).length !== 0) {\r\n            for (var key in data) {\r\n                if (data[key][0].includes('add') || data[key][0] === 'request') {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkAccept = function () {\r\n        var data = this.dataClick;\r\n        // console.log('checkAccept---', this.dataClick);\r\n        if (this.interview && this.interview.status === 'SCHEDULED') {\r\n            return true;\r\n        }\r\n        else {\r\n            if (Object.keys(data).length !== 0) {\r\n                for (var key in data) {\r\n                    if (!(data[key][0].includes('add') || data[key][0] === 'request')) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkSubmitAddDate = function (date) {\r\n        var _this = this;\r\n        var temp = 0;\r\n        date.forEach(function (item) {\r\n            if ((item.fromTime === \"\") || (item.timezone === \"\") || (item.toTime === \"\") || (item.zone === \"\")) {\r\n                temp = 1;\r\n                _this.isSubmit = false;\r\n                return 0;\r\n            }\r\n        });\r\n        if (temp === 0) {\r\n            this.isSubmit = true;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.parseTime = function (data) {\r\n        var dateObj = new Date(data.interviewDate);\r\n        var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n        var day = dateObj.getUTCDate();\r\n        var year = dateObj.getUTCFullYear();\r\n        var newDate = year + \"-\" + month + \"-\" + day + ' ' + data.fromTime + ' ' + data.timezone;\r\n        return newDate;\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.parseDuaration = function (fromTime, toTime) {\r\n        var result = 0;\r\n        if (fromTime && toTime) {\r\n            var from = fromTime.split(':');\r\n            var to = toTime.split(':');\r\n            result = (parseInt(to[0]) * 60 + parseInt(to[1])) - (parseInt(from[0]) * 60 + parseInt(from[1]));\r\n            return result;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.checkRole = function (role, session, name) {\r\n        if (session.bizAccepted && session.proAccepted) {\r\n            return true;\r\n        }\r\n        else {\r\n            if (name === 'biz') {\r\n                if (role === 'ROLE_BIZ') {\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (role === 'ROLE_BIZ') {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.parseData = function (index, valueClick) {\r\n        var sessions = this.sessions;\r\n        if (valueClick[0] === 'request') {\r\n            this.isSubmit = true;\r\n            var data = {};\r\n            var session = sessions[index];\r\n            var suggestedInterviewSchedules = session.suggestedInterviewSchedules;\r\n            data = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: []\r\n            };\r\n            return data;\r\n        }\r\n        else if (valueClick[0].includes('add')) {\r\n            var result = {};\r\n            var suggestedInterviewSchedules = [];\r\n            var session = sessions[index];\r\n            var value = this.lineDatas[index][\"line\" + index];\r\n            this.checkSubmitAddDate(value);\r\n            for (var index_1 in value) {\r\n                var item = value[index_1];\r\n                var data = {};\r\n                if (item && item.fromTime && item.timezone) {\r\n                    data = {\r\n                        \"bizAccepted\": this.role === 'ROLE_BIZ' ? true : false,\r\n                        \"duration\": this.parseDuaration(item.fromTime, item.toTime),\r\n                        \"fromTime\": item.fromTime,\r\n                        \"interviewDate\": new Date(item.timezone),\r\n                        \"interviewSessionId\": session.id,\r\n                        \"timezone\": item.zone,\r\n                        \"proAccepted\": this.role === 'ROLE_BIZ' ? false : true,\r\n                    };\r\n                    suggestedInterviewSchedules.push(data);\r\n                }\r\n            }\r\n            result = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: suggestedInterviewSchedules\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            this.isSubmit = true;\r\n            var result = {};\r\n            var data = {};\r\n            var schedule = [];\r\n            var session = sessions[index];\r\n            var scheduleSugget = session.suggestedInterviewSchedules[valueClick[2]];\r\n            data = {\r\n                \"bizAccepted\": this.checkRole(this.role, scheduleSugget, 'biz'),\r\n                \"duration\": scheduleSugget.duration,\r\n                \"fromTime\": valueClick[0],\r\n                \"id\": scheduleSugget['id'],\r\n                \"interviewDate\": new Date(valueClick[0]),\r\n                \"interviewSessionId\": session.id,\r\n                \"timezone\": scheduleSugget.timezone,\r\n                \"proAccepted\": this.checkRole(this.role, scheduleSugget, 'pro'),\r\n            };\r\n            schedule.push(data);\r\n            result = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: schedule\r\n            };\r\n            return result;\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.formartData = function (clickDate) {\r\n        var _this = this;\r\n        var keys = Object.keys(clickDate);\r\n        var sessions = this.sessions;\r\n        var dataParse = {};\r\n        var dataRecive = [];\r\n        keys.forEach(function (key, index) {\r\n            var i = key.replace('group', '');\r\n            dataParse = _this.parseData(i, clickDate[key]);\r\n            dataRecive.push(dataParse);\r\n        });\r\n        return dataRecive;\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.onSubmitData = function (type) {\r\n        var _this = this;\r\n        var data = [];\r\n        data = this.formartData(this.dataClick);\r\n        this.data.id = this.idInter;\r\n        this.data.interviewSessionScheduleList = data;\r\n        this.data.type = type;\r\n        this.data.bizNote = this.notePro;\r\n        if (this.isSubmit) {\r\n            this.interviewService.updateSchedule(this.data).subscribe(function (result) {\r\n                _this.refreshData.emit();\r\n            });\r\n        }\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.showConfirmDialog = function () {\r\n        var _this = this;\r\n        var modalRef = this.modalService.open(confirm_modal_component_1.ConfirmModalComponent);\r\n        modalRef.result.then(function (result) {\r\n            _this.interviewService.updateSchedule({\r\n                id: _this.idInter,\r\n                type: 0,\r\n                interviewSessionScheduleList: [] // required\r\n            }).subscribe(function (data) {\r\n                console.log('cancel successfully!');\r\n            });\r\n        }, function (reason) {\r\n            console.log('reason confirm cancel: ', reason);\r\n        });\r\n        return modalRef;\r\n    };\r\n    ProInterviewScheduleTabComponent.prototype.changeTimezone = function (event, index, key) {\r\n        if (this.lineDatas[key] && event) {\r\n            this.lineDatas[key][\"line\" + key][index].zone = event;\r\n        }\r\n        console.log('changeTimezone', this.lineDatas);\r\n        // console.log('lineData', this.lineDatas)\r\n        // console.log('event: ', event);\r\n        // console.log('index: ', index);\r\n    };\r\n    __decorate([\r\n        core_1.Input('interview'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ProInterviewScheduleTabComponent.prototype, \"interview\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ProInterviewScheduleTabComponent.prototype, \"refreshData\", void 0);\r\n    ProInterviewScheduleTabComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'pro-interview-schedule-tab',\r\n            template: __webpack_require__(\"./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/tab-schedule.component.html\"),\r\n            styles: [__webpack_require__(\"./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/tab-schedule.component.css\")]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [interview_service_1.InterviewService,\r\n            shared_1.Principal,\r\n            common_1.DatePipe,\r\n            ng_bootstrap_1.NgbModal])\r\n    ], ProInterviewScheduleTabComponent);\r\n    return ProInterviewScheduleTabComponent;\r\n}());\r\nexports.ProInterviewScheduleTabComponent = ProInterviewScheduleTabComponent;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/webapp/app/screens/interview/pro-interview-schedule-tab/tab-schedule.component.ts\n");

/***/ })

})