webpackHotUpdate(1,{

/***/ "./src/main/webapp/app/screens/schedule-interview/schedule-interview.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\r\nvar dropdown_item_model_1 = __webpack_require__(\"./src/main/webapp/app/shared/model/dropdown-item.model.ts\");\r\nvar schedule_interview_model_1 = __webpack_require__(\"./src/main/webapp/app/screens/schedule-interview/schedule-interview.model.ts\");\r\nvar schedule_interview_service_1 = __webpack_require__(\"./src/main/webapp/app/screens/schedule-interview/schedule-interview.service.ts\");\r\nvar ScheduleInterviewComponent = /** @class */ (function () {\r\n    function ScheduleInterviewComponent(\r\n        // private jhiAlertService: JhiAlertService,\r\n        scheduleInterviewService) {\r\n        this.scheduleInterviewService = scheduleInterviewService;\r\n        this.increaseInterview = new core_1.EventEmitter(false);\r\n        this.interviewTemplateList = [];\r\n        this.interviewTemplateListSetting = {\r\n            singleSelection: true,\r\n            disabled: false,\r\n            text: 'Select template',\r\n            enableSearchFilter: true,\r\n            classes: 'mdb-select'\r\n        };\r\n        this.interviewerList = [];\r\n        this.interviewerListSetting = {\r\n            singleSelection: true,\r\n            disabled: false,\r\n            text: 'Select Interviewer',\r\n            enableSearchFilter: true,\r\n            classes: 'mdb-select'\r\n        };\r\n        this.interviewTypeList = [];\r\n        this.interviewTypeListSetting = {\r\n            singleSelection: true,\r\n            disabled: false,\r\n            text: 'Select Interviewer Type',\r\n            enableSearchFilter: true,\r\n            classes: 'mdb-select'\r\n        };\r\n        this.interviewDurationList = [];\r\n        this.interviewDurationListSetting = {\r\n            singleSelection: true,\r\n            disabled: false,\r\n            text: 'Select Interviewer Duration',\r\n            enableSearchFilter: true,\r\n            classes: 'mdb-select'\r\n        };\r\n        this.scheduleInterview = new schedule_interview_model_1.ScheduleInterview();\r\n        this.isCreated = false;\r\n    }\r\n    ScheduleInterviewComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.interviewTemplateList = [\r\n            new dropdown_item_model_1.DropDownItem(1, 'Interview template 1'),\r\n            new dropdown_item_model_1.DropDownItem(2, 'Interview template 2'),\r\n            new dropdown_item_model_1.DropDownItem(3, 'Interview template 3'),\r\n            new dropdown_item_model_1.DropDownItem(4, 'Interview template 4')\r\n        ];\r\n        this.scheduleInterviewService.getListInterviewer().subscribe(function (result) {\r\n            console.log(result);\r\n            for (var i = 0; i < result.length; i++) {\r\n                var interviewerName = result[i].titlePrefix + \".\" + result[i].firstName + \" \" + result[i].lastName + \" \" + result[i].titleSuffix;\r\n                var interviewer = new dropdown_item_model_1.DropDownItem(result[i].id, interviewerName);\r\n                _this.interviewerList.push(interviewer);\r\n                _this._checkInterviewCreated();\r\n            }\r\n        });\r\n    };\r\n    ScheduleInterviewComponent.prototype.ngOnChanges = function () {\r\n        this._checkInterviewCreated();\r\n    };\r\n    ScheduleInterviewComponent.prototype.sendInvitation = function () {\r\n        // let invitation = {\r\n        //   \"proId\": 8,\r\n        //   \"proRequirementId\": 41,\r\n        //   \"status\": \"PENDING_AVAILABILITY\",\r\n        //   \"bizNote\": \"biz note 1\",\r\n        //   \"proNote\": null,\r\n        //   \"interviewSessions\": [\r\n        //     {\r\n        //       \"interviewerUserId\": 22,\r\n        //       \"interviewType\": \"interview type 1\",\r\n        //       \"interviewDate\": null,\r\n        //       \"fromTime\": null,\r\n        //       \"duration\": 60,\r\n        //       \"timezone\": \"UTC+07:00\",\r\n        //       \"decision\": \"AWAITING\",\r\n        //       \"note\": null,\r\n        //       \"suggestedInterviewSchedules\": [\r\n        //         {\r\n        //           \"interviewDate\": \"2018-06-12T04:32:21.423Z\",\r\n        //           \"fromTime\": \"13:00\",\r\n        //           \"duration\": 60,\r\n        //           \"timezone\": \"UTC+07:00\",\r\n        //           \"note\": null,\r\n        //           \"proAccepted\": false,\r\n        //           \"bizAccepted\": false\r\n        //         }\r\n        //       ]\r\n        //     }\r\n        //   ]\r\n        // }\r\n        var _this = this;\r\n        // invitation.proId = this.proID;\r\n        // invitation.proRequirementId = this.proRequirementID;\r\n        // this.scheduleInterviewService.sendInvitation(invitation).subscribe(result => {\r\n        //   console.log(result);\r\n        // });\r\n        this.scheduleInterview.proId = this.proID;\r\n        this.scheduleInterview.proRequirementId = this.proRequirementID;\r\n        this.scheduleInterview.status = \"PENDING_AVAILABILITY\";\r\n        for (var i = 0; i < this.scheduleInterview.interviewSessions.length; i++) {\r\n            this.scheduleInterview.interviewSessions[i].interviewerUserId = this.scheduleInterview.interviewSessions[i].selectedInterviewer[0].id;\r\n            delete this.scheduleInterview.interviewSessions[i].selectedInterviewer;\r\n            for (var index = 0; index < this.scheduleInterview.interviewSessions[i].suggestedInterviewSchedules.length; index++) {\r\n                this.scheduleInterview.interviewSessions[i].suggestedInterviewSchedules[index].duration = this.scheduleInterview.interviewSessions[i].duration;\r\n            }\r\n        }\r\n        this.scheduleInterviewService.sendInvitation(this.scheduleInterview).subscribe(function (result) {\r\n            _this.isCreated = true;\r\n            _this.increaseInterview.emit(true);\r\n        });\r\n    };\r\n    ScheduleInterviewComponent.prototype.removeInterviewer = function (interviewerIndex) {\r\n        this.scheduleInterview.interviewSessions.splice(interviewerIndex, 1);\r\n    };\r\n    ScheduleInterviewComponent.prototype.addInterviewer = function () {\r\n        this.scheduleInterview.interviewSessions.push(new schedule_interview_model_1.InterviewSession([new schedule_interview_model_1.SuggestedInterviewSchedule()]));\r\n    };\r\n    ScheduleInterviewComponent.prototype.removeSuggestedSchedule = function (interviewerIndex, scheduleIndex) {\r\n        this.scheduleInterview.interviewSessions[interviewerIndex].suggestedInterviewSchedules.splice(scheduleIndex, 1);\r\n    };\r\n    ScheduleInterviewComponent.prototype.addSuggestedSchedule = function (interviewerIndex) {\r\n        this.scheduleInterview.interviewSessions[interviewerIndex].suggestedInterviewSchedules.push(new schedule_interview_model_1.SuggestedInterviewSchedule());\r\n    };\r\n    ScheduleInterviewComponent.prototype.recievedDate = function (value, interviewerIndex, scheduleIndex) {\r\n        console.log(\"Set date\", value, interviewerIndex, scheduleIndex);\r\n        var splittedDate = value.data.split('.');\r\n        this.scheduleInterview.interviewSessions[interviewerIndex].suggestedInterviewSchedules[scheduleIndex].interviewDate = new Date(splittedDate[2] + \"-\" + splittedDate[0] + \"-\" + splittedDate[1]);\r\n        console.log('check date:', new Date(splittedDate[2] + \"-\" + splittedDate[0] + \"-\" + splittedDate[1]));\r\n    };\r\n    ScheduleInterviewComponent.prototype.recievedTime = function (value, interviewerIndex, scheduleIndex) {\r\n        if (value.name == \"toTime\") {\r\n            // this.scheduleInterview.interviewSessions[interviewerIndex].suggestedInterviewSchedules[scheduleIndex]. = value.data;\r\n        }\r\n        else if (value.name == \"fromTime\") {\r\n            this.scheduleInterview.interviewSessions[interviewerIndex].suggestedInterviewSchedules[scheduleIndex].fromTime = value.data;\r\n            this.scheduleInterview.interviewSessions[interviewerIndex].suggestedInterviewSchedules[scheduleIndex].duration = this.scheduleInterview.interviewSessions[interviewerIndex].duration;\r\n        }\r\n    };\r\n    ScheduleInterviewComponent.prototype.changeTimezone = function (event, index, key) {\r\n        this.scheduleInterview.interviewSessions[key].suggestedInterviewSchedules[index].timezone = event;\r\n    };\r\n    ScheduleInterviewComponent.prototype._checkInterviewCreated = function () {\r\n        var _this = this;\r\n        this.scheduleInterviewService.checkInterviewCreated(this.proID, this.proRequirementID).subscribe(function (res) {\r\n            if (res.body.length > 0) {\r\n                _this.isCreated = true;\r\n                _this.scheduleInterview = res.body[0];\r\n                for (var i = 0; i < _this.scheduleInterview.interviewSessions.length; i++) {\r\n                    console.log(_this.interviewerList);\r\n                    for (var interviewerIndex = 0; interviewerIndex < _this.interviewerList.length; interviewerIndex++) {\r\n                        if (_this.interviewerList[interviewerIndex].id == _this.scheduleInterview.interviewSessions[i].interviewerUserId) {\r\n                            var interviewer = _this.interviewerList[interviewerIndex];\r\n                            _this.scheduleInterview.interviewSessions[i].selectedInterviewer.push(interviewer);\r\n                        }\r\n                    }\r\n                }\r\n                console.log(_this.scheduleInterview);\r\n            }\r\n            else {\r\n                _this.scheduleInterview.interviewSessions = [\r\n                    new schedule_interview_model_1.InterviewSession([new schedule_interview_model_1.SuggestedInterviewSchedule()])\r\n                ];\r\n            }\r\n        });\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], ScheduleInterviewComponent.prototype, \"proID\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], ScheduleInterviewComponent.prototype, \"proRequirementID\", void 0);\r\n    __decorate([\r\n        core_1.Output('increase'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ScheduleInterviewComponent.prototype, \"increaseInterview\", void 0);\r\n    ScheduleInterviewComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-schedule-interview',\r\n            template: __webpack_require__(\"./src/main/webapp/app/screens/schedule-interview/schedule-interview.component.html\"),\r\n            styles: [],\r\n        }),\r\n        __metadata(\"design:paramtypes\", [schedule_interview_service_1.ScheduleInterviewService])\r\n    ], ScheduleInterviewComponent);\r\n    return ScheduleInterviewComponent;\r\n}());\r\nexports.ScheduleInterviewComponent = ScheduleInterviewComponent;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/webapp/app/screens/schedule-interview/schedule-interview.component.ts\n");

/***/ })

})