webpackHotUpdate(1,{

/***/ "./src/main/webapp/app/screens/biz-interview/components/schedule-tab/tab-schedule.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\r\nvar interview_service_1 = __webpack_require__(\"./src/main/webapp/app/screens/biz-interview/services/interview.service.ts\");\r\nvar common_1 = __webpack_require__(\"./node_modules/@angular/common/esm5/common.js\");\r\nvar shared_1 = __webpack_require__(\"./src/main/webapp/app/shared/index.ts\");\r\nvar ng_bootstrap_1 = __webpack_require__(\"./node_modules/@ng-bootstrap/ng-bootstrap/index.js\");\r\nvar confirm_modal_component_1 = __webpack_require__(\"./src/main/webapp/app/screens/biz-interview/components/confirm-modal/confirm-modal.component.ts\");\r\nvar ScheduleTabComponent = /** @class */ (function () {\r\n    function ScheduleTabComponent(interviewService, principal, datePipe, modalService, elementRef) {\r\n        var _this = this;\r\n        this.interviewService = interviewService;\r\n        this.principal = principal;\r\n        this.datePipe = datePipe;\r\n        this.modalService = modalService;\r\n        this.elementRef = elementRef;\r\n        this.switch = '';\r\n        this.showSelectDate = false;\r\n        this.dataClick = {};\r\n        this.lineDate = [\r\n            {\r\n                timezone: '',\r\n                fromTime: '',\r\n                toTime: '',\r\n                zone: ''\r\n            }\r\n        ];\r\n        this.data = {\r\n            \"id\": '',\r\n            \"interviewSessionScheduleList\": [],\r\n            \"note\": 'string',\r\n            \"type\": ''\r\n        };\r\n        this.timezone = '';\r\n        this.principal.identity().then(function (account) {\r\n            _this.role = account.authorities[1];\r\n            console.log('current user: ', account);\r\n        });\r\n    }\r\n    ScheduleTabComponent.prototype.checkBizAcepted = function (data) {\r\n        var _this = this;\r\n        var schedule = data.suggestedInterviewSchedules;\r\n        if (schedule.length > 0) {\r\n            schedule.forEach(function (el, i) {\r\n                if (el.proAccepted && el.bizAccepted) {\r\n                    var name_1 = \"group0\";\r\n                    _this.dataClick = Object.assign({}, _this.dataClick, (_a = {},\r\n                        _a[name_1] = [el.interviewDate, i],\r\n                        _a));\r\n                }\r\n                var _a;\r\n            });\r\n        }\r\n        console.log('valueMAcDinh---', this.dataClick);\r\n    };\r\n    ScheduleTabComponent.prototype.checkDateAccept = function (date) {\r\n        if (date) {\r\n            if (date.proAccepted && date.bizAccepted) {\r\n                return 'checked';\r\n            }\r\n            return '';\r\n        }\r\n    };\r\n    ScheduleTabComponent.prototype.ngOnChanges = function (changes) {\r\n        if (this.session) {\r\n            this.id = this.session.id;\r\n            this.sessions = this.session;\r\n            this.checkBizAcepted(this.sessions);\r\n            console.log('onChanges--', this.sessions);\r\n        }\r\n        if (this.interview) {\r\n            this.idInter = this.interview.id;\r\n        }\r\n    };\r\n    ScheduleTabComponent.prototype.ngAfterViewInit = function () {\r\n        this.initTooltip('#tooltip-message');\r\n    };\r\n    ScheduleTabComponent.prototype.initTooltip = function (id) {\r\n        window.initTooltip(id);\r\n    };\r\n    ScheduleTabComponent.prototype.onClick = function (e) {\r\n        var _a = e.target, value = _a.value, name = _a.name, id = _a.id;\r\n        id = id.replace('radio', '');\r\n        this.dataClick = Object.assign({}, this.dataClick, (_b = {},\r\n            _b[name] = [value, id],\r\n            _b));\r\n        this.switch = e.target.value;\r\n        e.target.value === 'add' ? this.showSelectDate = true : this.showSelectDate = false;\r\n        var _b;\r\n    };\r\n    ScheduleTabComponent.prototype.recievedDate = function (value) {\r\n        var id = value.id, data = value.data;\r\n        this.lineDate[id].timezone = data;\r\n    };\r\n    ScheduleTabComponent.prototype.recievedTime = function (value) {\r\n        var id = value.id, data = value.data, name = value.name;\r\n        this.lineDate[id][name] = data;\r\n    };\r\n    ScheduleTabComponent.prototype.onRemoveLine = function (index) {\r\n        this.lineDate.splice(index, 1);\r\n    };\r\n    ScheduleTabComponent.prototype.onAddLine = function () {\r\n        this.lineDate.push({\r\n            timezone: '',\r\n            fromTime: '',\r\n            toTime: '',\r\n            zone: ''\r\n        });\r\n    };\r\n    ScheduleTabComponent.prototype.checkDisabled = function () {\r\n        var data = this.dataClick;\r\n        for (var key in data) {\r\n            if (data[key] === 'add' || data[key] === 'request') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ScheduleTabComponent.prototype.parseDuaration = function (fromTime, toTime) {\r\n        var result = 0;\r\n        if (fromTime && toTime) {\r\n            var from = fromTime.split(':');\r\n            var to = toTime.split(':');\r\n            result = (parseInt(to[0]) * 60 + parseInt(to[1])) - (parseInt(from[0]) * 60 + parseInt(from[1]));\r\n            return result;\r\n        }\r\n    };\r\n    ScheduleTabComponent.prototype.parseData = function (session, date) {\r\n        var _this = this;\r\n        if (this.switch === 'add') {\r\n            var suggestedInterviewSchedules_1 = [];\r\n            var result = {};\r\n            date.forEach(function (item, index) {\r\n                var data = {};\r\n                data = {\r\n                    \"bizAccepted\": _this.role === 'ROLE_BIZ' ? true : false,\r\n                    \"duration\": _this.parseDuaration(item.fromTime, item.toTime),\r\n                    \"fromTime\": item.fromTime,\r\n                    \"interviewDate\": new Date(item.timezone),\r\n                    \"interviewSessionId\": _this.id,\r\n                    \"timezone\": item.zone,\r\n                    \"proAccepted\": _this.role === 'ROLE_BIZ' ? false : true,\r\n                };\r\n                suggestedInterviewSchedules_1.push(data);\r\n            });\r\n            result = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: suggestedInterviewSchedules_1\r\n            };\r\n            // this.data.interviewSessionScheduleList.push({\r\n            //   id: this.id,\r\n            //   suggestedInterviewSchedules: suggestedInterviewSchedules\r\n            // })\r\n            // this.data.id = this.idInter;\r\n            return result;\r\n        }\r\n        else if (this.switch === 'request') {\r\n            var data = {};\r\n            data = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: []\r\n            };\r\n            return data;\r\n        }\r\n        else {\r\n            var suggestedInterviewSchedules = session.suggestedInterviewSchedules;\r\n            var keys = Object.keys(date);\r\n            var result = {};\r\n            var schedule = [];\r\n            var data = {};\r\n            var index = parseInt(date[keys[0]][1]);\r\n            var scheduleSugget = suggestedInterviewSchedules[index];\r\n            data = {\r\n                \"bizAccepted\": this.role === 'ROLE_BIZ' ? true : false,\r\n                \"duration\": scheduleSugget.duration,\r\n                \"fromTime\": scheduleSugget.fromTime,\r\n                \"id\": scheduleSugget.id,\r\n                \"interviewDate\": new Date(scheduleSugget.interviewDate),\r\n                \"interviewSessionId\": session.id,\r\n                \"timezone\": scheduleSugget.timezone,\r\n                \"proAccepted\": this.role === 'ROLE_BIZ' ? false : true,\r\n            };\r\n            schedule.push(data);\r\n            result = {\r\n                id: session.id,\r\n                suggestedInterviewSchedules: schedule\r\n            };\r\n            return result;\r\n            // let index = keys[0].replace('group', '')\r\n            // suggestedInterviewSchedules[index].interviewDate = value;\r\n            // suggestedInterviewSchedules[index].interviewSessionId = this.id;\r\n            // if (this.role === 'ROLE_BIZ') {\r\n            //   suggestedInterviewSchedules[index].bizAccepted = true;\r\n            // } else {\r\n            //   suggestedInterviewSchedules[index].proAccepted = true;\r\n            // }\r\n            // this.data.id = this.idInter;\r\n            // this.data.interviewSessionScheduleList.push({\r\n            //   id: this.id,\r\n            //   suggestedInterviewSchedules: suggestedInterviewSchedules\r\n            // })\r\n            // return this.data;\r\n        }\r\n    };\r\n    ScheduleTabComponent.prototype.formartData = function (sessions, dateAvailability, lineDate) {\r\n        var data = {};\r\n        if (this.switch === 'add') {\r\n            data = this.parseData(sessions, lineDate);\r\n            return data;\r\n        }\r\n        else if (this.switch === 'request') {\r\n            data = this.parseData(sessions, dateAvailability);\r\n            return data;\r\n        }\r\n        else {\r\n            data = this.parseData(sessions, dateAvailability);\r\n            return data;\r\n        }\r\n    };\r\n    ScheduleTabComponent.prototype.onSubmitData = function (type) {\r\n        var data = {};\r\n        data = this.formartData(this.sessions, this.dataClick, this.lineDate);\r\n        this.data.id = this.idInter;\r\n        this.data.interviewSessionScheduleList.push(data);\r\n        this.data.type = type;\r\n        this.data.note = this.note;\r\n        console.log('onSubmitData----', this.data);\r\n        // data = Object.assign({}, data, { type: type, note: this.note })\r\n        // this.interviewService.updateSchedule(data).subscribe(result => {\r\n        // });\r\n    };\r\n    ScheduleTabComponent.prototype.showConfirmDialog = function () {\r\n        var _this = this;\r\n        var modalRef = this.modalService.open(confirm_modal_component_1.ConfirmModalComponent);\r\n        modalRef.result.then(function (result) {\r\n            _this.interviewService.updateSchedule({\r\n                id: _this.idInter,\r\n                type: 0,\r\n                interviewSessionScheduleList: [] // required\r\n            }).subscribe(function (data) {\r\n                console.log('cancel successfully!');\r\n            });\r\n        }, function (reason) {\r\n            console.log('reason confirm cancel: ', reason);\r\n        });\r\n        return modalRef;\r\n    };\r\n    ScheduleTabComponent.prototype.changeTimezone = function (event, index) {\r\n        if (event) {\r\n            this.lineDate[index].zone = event;\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input('session'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ScheduleTabComponent.prototype, \"session\", void 0);\r\n    __decorate([\r\n        core_1.Input('interview'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ScheduleTabComponent.prototype, \"interview\", void 0);\r\n    ScheduleTabComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'app-schedule-tab',\r\n            template: __webpack_require__(\"./src/main/webapp/app/screens/biz-interview/components/schedule-tab/tab-schedule.component.html\"),\r\n            styles: [__webpack_require__(\"./src/main/webapp/app/screens/biz-interview/components/schedule-tab/tab-schedule.component.css\")]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [interview_service_1.InterviewService,\r\n            shared_1.Principal,\r\n            common_1.DatePipe,\r\n            ng_bootstrap_1.NgbModal,\r\n            core_1.ElementRef])\r\n    ], ScheduleTabComponent);\r\n    return ScheduleTabComponent;\r\n}());\r\nexports.ScheduleTabComponent = ScheduleTabComponent;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/webapp/app/screens/biz-interview/components/schedule-tab/tab-schedule.component.ts\n");

/***/ })

})